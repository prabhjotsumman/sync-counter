{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/prabhjot/shared-counter-app/src/lib/offlineStorage.ts"],"sourcesContent":["import { Counter } from './counters';\n\nconst COUNTERS_STORAGE_KEY = 'offline_counters';\nconst PENDING_CHANGES_KEY = 'pending_changes';\n\nexport interface OfflineCounterData {\n  counters: Counter[];\n  lastSync: number;\n  lastServerSync: number;\n}\n\nexport interface PendingChange {\n  id: string;\n  type: 'increment' | 'decrement';\n  timestamp: number;\n  delta: number;\n  previousValue: number;\n  newValue: number;\n}\n\n// Get counters from local storage\nexport function getOfflineCounters(): Counter[] {\n  try {\n    const data = localStorage.getItem(COUNTERS_STORAGE_KEY);\n    if (data) {\n      const parsed = JSON.parse(data) as OfflineCounterData;\n      return parsed.counters || [];\n    }\n  } catch (error) {\n    console.error('Failed to get offline counters:', error);\n  }\n  return [];\n}\n\n// Save counters to local storage\nexport function saveOfflineCounters(counters: Counter[], serverSyncTime?: number): void {\n  try {\n    const existingData = localStorage.getItem(COUNTERS_STORAGE_KEY);\n    const data: OfflineCounterData = existingData \n      ? JSON.parse(existingData)\n      : { counters: [], lastSync: 0, lastServerSync: 0 };\n    \n    data.counters = counters;\n    data.lastSync = Date.now();\n    if (serverSyncTime) {\n      data.lastServerSync = serverSyncTime;\n    }\n    \n    localStorage.setItem(COUNTERS_STORAGE_KEY, JSON.stringify(data));\n  } catch (error) {\n    console.error('Failed to save offline counters:', error);\n  }\n}\n\n// Get pending changes from local storage\nexport function getPendingChanges(): PendingChange[] {\n  try {\n    const data = localStorage.getItem(PENDING_CHANGES_KEY);\n    if (data) {\n      return JSON.parse(data) || [];\n    }\n  } catch (error) {\n    console.error('Failed to get pending changes:', error);\n  }\n  return [];\n}\n\n// Save pending changes to local storage\nexport function savePendingChanges(changes: PendingChange[]): void {\n  try {\n    localStorage.setItem(PENDING_CHANGES_KEY, JSON.stringify(changes));\n  } catch (error) {\n    console.error('Failed to save pending changes:', error);\n  }\n}\n\n// Add a pending change\nexport function addPendingChange(change: Omit<PendingChange, 'timestamp'>): void {\n  try {\n    const changes = getPendingChanges();\n    changes.push({\n      ...change,\n      timestamp: Date.now()\n    });\n    savePendingChanges(changes);\n  } catch (error) {\n    console.error('Failed to add pending change:', error);\n  }\n}\n\n// Clear pending changes\nexport function clearPendingChanges(): void {\n  try {\n    localStorage.removeItem(PENDING_CHANGES_KEY);\n  } catch (error) {\n    console.error('Failed to clear pending changes:', error);\n  }\n}\n\n// Update a counter locally with proper timestamp tracking\nexport function updateOfflineCounter(id: string, delta: number): Counter | null {\n  try {\n    const counters = getOfflineCounters();\n    const counterIndex = counters.findIndex(c => c.id === id);\n    \n    if (counterIndex === -1) {\n      return null;\n    }\n    \n    const previousValue = counters[counterIndex].value;\n    const newValue = previousValue + delta;\n    \n    // Update the counter\n    counters[counterIndex].value = newValue;\n    \n    // Save updated counters\n    saveOfflineCounters(counters);\n    \n    // Add pending change with full context\n    addPendingChange({\n      id,\n      type: delta > 0 ? 'increment' : 'decrement',\n      delta,\n      previousValue,\n      newValue\n    });\n    \n    return counters[counterIndex];\n  } catch (error) {\n    console.error('Failed to update offline counter:', error);\n    return null;\n  }\n}\n\n// Get last sync timestamp\nexport function getLastSyncTimestamp(): number {\n  try {\n    const data = localStorage.getItem(COUNTERS_STORAGE_KEY);\n    if (data) {\n      const parsed = JSON.parse(data) as OfflineCounterData;\n      return parsed.lastSync || 0;\n    }\n  } catch (error) {\n    console.error('Failed to get last sync timestamp:', error);\n  }\n  return 0;\n}\n\n// Get last server sync timestamp\nexport function getLastServerSyncTimestamp(): number {\n  try {\n    const data = localStorage.getItem(COUNTERS_STORAGE_KEY);\n    if (data) {\n      const parsed = JSON.parse(data) as OfflineCounterData;\n      return parsed.lastServerSync || 0;\n    }\n  } catch (error) {\n    console.error('Failed to get last server sync timestamp:', error);\n  }\n  return 0;\n}\n\n// Check if data is stale (older than 5 minutes)\nexport function isDataStale(): boolean {\n  const lastSync = getLastSyncTimestamp();\n  const fiveMinutes = 5 * 60 * 1000;\n  return Date.now() - lastSync > fiveMinutes;\n}\n\n// Merge server data with local changes based on timestamps\nexport function mergeServerData(serverCounters: Counter[]): Counter[] {\n  try {\n    const localCounters = getOfflineCounters();\n    const pendingChanges = getPendingChanges();\n    const lastServerSync = getLastServerSyncTimestamp();\n    \n    // If no local data, use server data\n    if (localCounters.length === 0) {\n      return serverCounters;\n    }\n    \n    // Create a map of server counters for easy lookup\n    const serverCounterMap = new Map(serverCounters.map(c => [c.id, c]));\n    \n    // Merge each counter\n    const mergedCounters = localCounters.map(localCounter => {\n      const serverCounter = serverCounterMap.get(localCounter.id);\n      \n      if (!serverCounter) {\n        // Server doesn't have this counter, keep local\n        return localCounter;\n      }\n      \n      // Find the latest change for this counter\n      const latestChange = pendingChanges\n        .filter(change => change.id === localCounter.id)\n        .sort((a, b) => b.timestamp - a.timestamp)[0];\n      \n      if (!latestChange) {\n        // No local changes, use server value\n        return serverCounter;\n      }\n      \n      // If our latest change is newer than server sync, use our value\n      if (latestChange.timestamp > lastServerSync) {\n        return localCounter;\n      }\n      \n      // Otherwise, use server value\n      return serverCounter;\n    });\n    \n    return mergedCounters;\n  } catch (error) {\n    console.error('Failed to merge server data:', error);\n    return serverCounters;\n  }\n}\n\n// Sync pending changes to server\nexport async function syncPendingChangesToServer(): Promise<boolean> {\n  try {\n    const pendingChanges = getPendingChanges();\n    if (pendingChanges.length === 0) {\n      return true; // No changes to sync\n    }\n\n    console.log(`Syncing ${pendingChanges.length} pending changes to server...`);\n\n    // Group changes by counter ID to avoid conflicts\n    const changesByCounter = new Map<string, PendingChange[]>();\n    pendingChanges.forEach(change => {\n      if (!changesByCounter.has(change.id)) {\n        changesByCounter.set(change.id, []);\n      }\n      changesByCounter.get(change.id)!.push(change);\n    });\n\n    // Sync each counter's changes\n    for (const [counterId, changes] of changesByCounter) {\n      // Sort changes by timestamp to apply in order\n      const sortedChanges = changes.sort((a, b) => a.timestamp - b.timestamp);\n      \n      // Apply each change to the server\n      for (const change of sortedChanges) {\n        try {\n          const endpoint = change.type === 'increment' ? 'increment' : 'decrement';\n          const response = await fetch(`/api/counters/${counterId}/${endpoint}`, {\n            method: 'POST',\n          });\n\n          if (!response.ok) {\n            console.error(`Failed to sync change for counter ${counterId}:`, change);\n            return false;\n          }\n        } catch (error) {\n          console.error(`Error syncing change for counter ${counterId}:`, error);\n          return false;\n        }\n      }\n    }\n\n    // Clear pending changes after successful sync\n    clearPendingChanges();\n    console.log('Successfully synced all pending changes to server');\n    return true;\n  } catch (error) {\n    console.error('Failed to sync pending changes:', error);\n    return false;\n  }\n}\n\n// Clear all offline data\nexport function clearOfflineData(): void {\n  try {\n    localStorage.removeItem(COUNTERS_STORAGE_KEY);\n    localStorage.removeItem(PENDING_CHANGES_KEY);\n  } catch (error) {\n    console.error('Failed to clear offline data:', error);\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["file:///Users/prabhjot/shared-counter-app/src/components/Counter.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { updateOfflineCounter, saveOfflineCounters, getOfflineCounters } from '@/lib/offlineStorage';\n\ninterface CounterProps {\n  id: string;\n  name: string;\n  value: number;\n  onUpdate: (id: string, newValue: number) => void;\n  isOffline?: boolean;\n  allCounters?: Array<{ id: string; name: string; value: number }>;\n  isManageMode?: boolean;\n  onEdit?: (counter: { id: string; name: string; value: number }) => void;\n}\n\nexport default function Counter({ id, name, value, onUpdate, isOffline = false, allCounters = [], isManageMode = false, onEdit }: CounterProps) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [lastAction, setLastAction] = useState<'increment' | 'decrement' | null>(null);\n\n  const handleIncrement = async () => {\n    setIsLoading(true);\n    setLastAction('increment');\n    \n    if (isOffline) {\n      // Handle offline increment\n      const updatedCounter = updateOfflineCounter(id, 1);\n      if (updatedCounter) {\n        onUpdate(id, updatedCounter.value);\n      }\n      setIsLoading(false);\n      setTimeout(() => setLastAction(null), 1000);\n      return;\n    }\n\n    try {\n      const response = await fetch(`/api/counters/${id}/increment`, {\n        method: 'POST',\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        const updatedCounter = data.counter;\n        onUpdate(id, updatedCounter.value);\n        \n        // Update local storage with the latest counter values\n        const updatedCounters = allCounters.map(counter => \n          counter.id === id ? { ...counter, value: updatedCounter.value } : counter\n        );\n        saveOfflineCounters(updatedCounters);\n      }\n    } catch (error) {\n      console.error('Error incrementing counter:', error);\n      // Fallback to offline mode if network fails\n      const updatedCounter = updateOfflineCounter(id, 1);\n      if (updatedCounter) {\n        onUpdate(id, updatedCounter.value);\n      }\n    } finally {\n      setIsLoading(false);\n      // Clear the action indicator after a short delay\n      setTimeout(() => setLastAction(null), 1000);\n    }\n  };\n\n  const handleDecrement = async () => {\n    setIsLoading(true);\n    setLastAction('decrement');\n    \n    if (isOffline) {\n      // Handle offline decrement\n      const updatedCounter = updateOfflineCounter(id, -1);\n      if (updatedCounter) {\n        onUpdate(id, updatedCounter.value);\n      }\n      setIsLoading(false);\n      setTimeout(() => setLastAction(null), 1000);\n      return;\n    }\n\n    try {\n      const response = await fetch(`/api/counters/${id}/decrement`, {\n        method: 'POST',\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        const updatedCounter = data.counter;\n        onUpdate(id, updatedCounter.value);\n        \n        // Update local storage with the latest counter values\n        const updatedCounters = allCounters.map(counter => \n          counter.id === id ? { ...counter, value: updatedCounter.value } : counter\n        );\n        saveOfflineCounters(updatedCounters);\n      }\n    } catch (error) {\n      console.error('Error decrementing counter:', error);\n      // Fallback to offline mode if network fails\n      const updatedCounter = updateOfflineCounter(id, -1);\n      if (updatedCounter) {\n        onUpdate(id, updatedCounter.value);\n      }\n    } finally {\n      setIsLoading(false);\n      // Clear the action indicator after a short delay\n      setTimeout(() => setLastAction(null), 1000);\n    }\n  };\n\n  return (\n    <div className={`bg-gray-900 rounded-lg p-8 text-center min-w-[300px] transition-all duration-200 ${\n      lastAction ? 'ring-2 ring-blue-500 ring-opacity-50' : ''\n    } ${isOffline ? 'ring-2 ring-yellow-500 ring-opacity-30' : ''}`}>\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-xl font-semibold text-white\">{name}</h3>\n        <div className=\"flex items-center gap-2\">\n          {isOffline && (\n            <div className=\"flex items-center gap-1 text-yellow-400 text-xs\">\n              <div className=\"w-2 h-2 bg-yellow-400 rounded-full\"></div>\n              Offline\n            </div>\n          )}\n          {isManageMode && onEdit && (\n            <button\n              onClick={() => onEdit({ id, name, value })}\n              className=\"p-1 text-gray-400 hover:text-white transition-colors duration-200\"\n              title=\"Edit counter\"\n            >\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n              </svg>\n            </button>\n          )}\n        </div>\n      </div>\n      \n      <div className={`text-6xl font-bold mb-8 transition-all duration-300 ${\n        lastAction === 'increment' ? 'text-green-400' : \n        lastAction === 'decrement' ? 'text-red-400' : \n        'text-white'\n      }`}>\n        {value}\n      </div>\n      \n      <div className=\"flex gap-4 justify-center\">\n        <button\n          onClick={handleDecrement}\n          disabled={isLoading}\n          className={`font-bold py-3 px-6 rounded-lg text-xl transition-all duration-200 min-w-[80px] ${\n            isLoading && lastAction === 'decrement'\n              ? 'bg-red-800 text-gray-300 cursor-not-allowed'\n              : 'bg-red-600 hover:bg-red-700 text-white'\n          }`}\n        >\n          –\n        </button>\n        \n        <button\n          onClick={handleIncrement}\n          disabled={isLoading}\n          className={`font-bold py-3 px-6 rounded-lg text-xl transition-all duration-200 min-w-[80px] ${\n            isLoading && lastAction === 'increment'\n              ? 'bg-green-800 text-gray-300 cursor-not-allowed'\n              : 'bg-green-600 hover:bg-green-700 text-white'\n          }`}\n        >\n          +\n        </button>\n      </div>\n      \n      {isLoading && (\n        <div className=\"mt-4 text-gray-400 text-sm flex items-center justify-center gap-2\">\n          <div className=\"w-4 h-4 border-2 border-gray-400 border-t-transparent rounded-full animate-spin\"></div>\n          Updating...\n        </div>\n      )}\n      \n      {lastAction && !isLoading && (\n        <div className=\"mt-2 text-xs text-gray-500\">\n          {lastAction === 'increment' ? '✓ Incremented' : '✓ Decremented'}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAgBe,SAAS,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,YAAY,KAAK,EAAE,cAAc,EAAE,EAAE,eAAe,KAAK,EAAE,MAAM,EAAgB;IAC5I,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoC;IAE/E,MAAM,kBAAkB;QACtB,aAAa;QACb,cAAc;QAEd,IAAI,WAAW;YACb,2BAA2B;YAC3B,MAAM,iBAAiB,CAAA,GAAA,4HAAA,CAAA,uBAAoB,AAAD,EAAE,IAAI;YAChD,IAAI,gBAAgB;gBAClB,SAAS,IAAI,eAAe,KAAK;YACnC;YACA,aAAa;YACb,WAAW,IAAM,cAAc,OAAO;YACtC;QACF;QAEA,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,CAAC,cAAc,EAAE,GAAG,UAAU,CAAC,EAAE;gBAC5D,QAAQ;YACV;YAEA,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,MAAM,iBAAiB,KAAK,OAAO;gBACnC,SAAS,IAAI,eAAe,KAAK;gBAEjC,sDAAsD;gBACtD,MAAM,kBAAkB,YAAY,GAAG,CAAC,CAAA,UACtC,QAAQ,EAAE,KAAK,KAAK;wBAAE,GAAG,OAAO;wBAAE,OAAO,eAAe,KAAK;oBAAC,IAAI;gBAEpE,CAAA,GAAA,4HAAA,CAAA,sBAAmB,AAAD,EAAE;YACtB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,+BAA+B;YAC7C,4CAA4C;YAC5C,MAAM,iBAAiB,CAAA,GAAA,4HAAA,CAAA,uBAAoB,AAAD,EAAE,IAAI;YAChD,IAAI,gBAAgB;gBAClB,SAAS,IAAI,eAAe,KAAK;YACnC;QACF,SAAU;YACR,aAAa;YACb,iDAAiD;YACjD,WAAW,IAAM,cAAc,OAAO;QACxC;IACF;IAEA,MAAM,kBAAkB;QACtB,aAAa;QACb,cAAc;QAEd,IAAI,WAAW;YACb,2BAA2B;YAC3B,MAAM,iBAAiB,CAAA,GAAA,4HAAA,CAAA,uBAAoB,AAAD,EAAE,IAAI,CAAC;YACjD,IAAI,gBAAgB;gBAClB,SAAS,IAAI,eAAe,KAAK;YACnC;YACA,aAAa;YACb,WAAW,IAAM,cAAc,OAAO;YACtC;QACF;QAEA,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,CAAC,cAAc,EAAE,GAAG,UAAU,CAAC,EAAE;gBAC5D,QAAQ;YACV;YAEA,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,MAAM,iBAAiB,KAAK,OAAO;gBACnC,SAAS,IAAI,eAAe,KAAK;gBAEjC,sDAAsD;gBACtD,MAAM,kBAAkB,YAAY,GAAG,CAAC,CAAA,UACtC,QAAQ,EAAE,KAAK,KAAK;wBAAE,GAAG,OAAO;wBAAE,OAAO,eAAe,KAAK;oBAAC,IAAI;gBAEpE,CAAA,GAAA,4HAAA,CAAA,sBAAmB,AAAD,EAAE;YACtB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,+BAA+B;YAC7C,4CAA4C;YAC5C,MAAM,iBAAiB,CAAA,GAAA,4HAAA,CAAA,uBAAoB,AAAD,EAAE,IAAI,CAAC;YACjD,IAAI,gBAAgB;gBAClB,SAAS,IAAI,eAAe,KAAK;YACnC;QACF,SAAU;YACR,aAAa;YACb,iDAAiD;YACjD,WAAW,IAAM,cAAc,OAAO;QACxC;IACF;IAEA,qBACE,8OAAC;QAAI,WAAW,CAAC,iFAAiF,EAChG,aAAa,yCAAyC,GACvD,CAAC,EAAE,YAAY,2CAA2C,IAAI;;0BAC7D,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAoC;;;;;;kCAClD,8OAAC;wBAAI,WAAU;;4BACZ,2BACC,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;;;;;oCAA2C;;;;;;;4BAI7D,gBAAgB,wBACf,8OAAC;gCACC,SAAS,IAAM,OAAO;wCAAE;wCAAI;wCAAM;oCAAM;gCACxC,WAAU;gCACV,OAAM;0CAEN,cAAA,8OAAC;oCAAI,WAAU;oCAAU,MAAK;oCAAO,QAAO;oCAAe,SAAQ;8CACjE,cAAA,8OAAC;wCAAK,eAAc;wCAAQ,gBAAe;wCAAQ,aAAa;wCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAO/E,8OAAC;gBAAI,WAAW,CAAC,oDAAoD,EACnE,eAAe,cAAc,mBAC7B,eAAe,cAAc,iBAC7B,cACA;0BACC;;;;;;0BAGH,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,SAAS;wBACT,UAAU;wBACV,WAAW,CAAC,gFAAgF,EAC1F,aAAa,eAAe,cACxB,gDACA,0CACJ;kCACH;;;;;;kCAID,8OAAC;wBACC,SAAS;wBACT,UAAU;wBACV,WAAW,CAAC,gFAAgF,EAC1F,aAAa,eAAe,cACxB,kDACA,8CACJ;kCACH;;;;;;;;;;;;YAKF,2BACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;oBAAwF;;;;;;;YAK1G,cAAc,CAAC,2BACd,8OAAC;gBAAI,WAAU;0BACZ,eAAe,cAAc,kBAAkB;;;;;;;;;;;;AAK1D","debugId":null}},
    {"offset": {"line": 489, "column": 0}, "map": {"version":3,"sources":["file:///Users/prabhjot/shared-counter-app/src/hooks/useOffline.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { getPendingChanges, syncPendingChangesToServer } from '@/lib/offlineStorage';\n\ninterface UseOfflineReturn {\n  isOnline: boolean;\n  isOffline: boolean;\n  pendingRequests: number;\n  syncOfflineData: () => Promise<void>;\n}\n\nexport function useOffline(): UseOfflineReturn {\n  const [isOnline, setIsOnline] = useState(true);\n  const [pendingRequests, setPendingRequests] = useState(0);\n  const [swRegistration, setSwRegistration] = useState<ServiceWorkerRegistration | null>(null);\n\n  // Register service worker\n  useEffect(() => {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker\n        .register('/sw.js')\n        .then((registration) => {\n          setSwRegistration(registration);\n          console.log('Service Worker registered successfully');\n        })\n        .catch((error) => {\n          console.error('Service Worker registration failed:', error);\n        });\n    }\n  }, []);\n\n  // Listen for online/offline events\n  useEffect(() => {\n    const handleOnline = () => {\n      setIsOnline(true);\n      console.log('Back online - syncing data...');\n      // Trigger sync when coming back online\n      if (pendingRequests > 0) {\n        syncOfflineData();\n      }\n    };\n\n    const handleOffline = () => {\n      setIsOnline(false);\n      console.log('Gone offline');\n    };\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    // Check initial online status\n    setIsOnline(navigator.onLine);\n\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, [pendingRequests]);\n\n  // Update pending requests count\n  const updatePendingCount = useCallback(() => {\n    const changes = getPendingChanges();\n    setPendingRequests(changes.length);\n  }, []);\n\n  // Sync offline data when back online\n  const syncOfflineData = useCallback(async () => {\n    if (!isOnline) return;\n\n    try {\n      const changes = getPendingChanges();\n      if (changes.length === 0) return;\n\n      console.log(`Syncing ${changes.length} offline changes...`);\n      \n      // Sync pending changes to server\n      const success = await syncPendingChangesToServer();\n      if (success) {\n        // Trigger a page refresh to get updated data\n        window.location.reload();\n      }\n    } catch (error) {\n      console.error('Failed to sync offline data:', error);\n    }\n  }, [isOnline]);\n\n  // Initialize pending requests count and update periodically\n  useEffect(() => {\n    updatePendingCount();\n    \n    const interval = setInterval(updatePendingCount, 1000);\n    return () => clearInterval(interval);\n  }, [updatePendingCount]);\n\n  return {\n    isOnline,\n    isOffline: !isOnline,\n    pendingRequests,\n    syncOfflineData\n  };\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AASO,SAAS;IACd,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoC;IAEvF,0BAA0B;IAC1B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,mBAAmB,WAAW;YAChC,UAAU,aAAa,CACpB,QAAQ,CAAC,UACT,IAAI,CAAC,CAAC;gBACL,kBAAkB;gBAClB,QAAQ,GAAG,CAAC;YACd,GACC,KAAK,CAAC,CAAC;gBACN,QAAQ,KAAK,CAAC,uCAAuC;YACvD;QACJ;IACF,GAAG,EAAE;IAEL,mCAAmC;IACnC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,eAAe;YACnB,YAAY;YACZ,QAAQ,GAAG,CAAC;YACZ,uCAAuC;YACvC,IAAI,kBAAkB,GAAG;gBACvB;YACF;QACF;QAEA,MAAM,gBAAgB;YACpB,YAAY;YACZ,QAAQ,GAAG,CAAC;QACd;QAEA,OAAO,gBAAgB,CAAC,UAAU;QAClC,OAAO,gBAAgB,CAAC,WAAW;QAEnC,8BAA8B;QAC9B,YAAY,UAAU,MAAM;QAE5B,OAAO;YACL,OAAO,mBAAmB,CAAC,UAAU;YACrC,OAAO,mBAAmB,CAAC,WAAW;QACxC;IACF,GAAG;QAAC;KAAgB;IAEpB,gCAAgC;IAChC,MAAM,qBAAqB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACrC,MAAM,UAAU,CAAA,GAAA,4HAAA,CAAA,oBAAiB,AAAD;QAChC,mBAAmB,QAAQ,MAAM;IACnC,GAAG,EAAE;IAEL,qCAAqC;IACrC,MAAM,kBAAkB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAClC,IAAI,CAAC,UAAU;QAEf,IAAI;YACF,MAAM,UAAU,CAAA,GAAA,4HAAA,CAAA,oBAAiB,AAAD;YAChC,IAAI,QAAQ,MAAM,KAAK,GAAG;YAE1B,QAAQ,GAAG,CAAC,CAAC,QAAQ,EAAE,QAAQ,MAAM,CAAC,mBAAmB,CAAC;YAE1D,iCAAiC;YACjC,MAAM,UAAU,MAAM,CAAA,GAAA,4HAAA,CAAA,6BAA0B,AAAD;YAC/C,IAAI,SAAS;gBACX,6CAA6C;gBAC7C,OAAO,QAAQ,CAAC,MAAM;YACxB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gCAAgC;QAChD;IACF,GAAG;QAAC;KAAS;IAEb,4DAA4D;IAC5D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;QAEA,MAAM,WAAW,YAAY,oBAAoB;QACjD,OAAO,IAAM,cAAc;IAC7B,GAAG;QAAC;KAAmB;IAEvB,OAAO;QACL;QACA,WAAW,CAAC;QACZ;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 579, "column": 0}, "map": {"version":3,"sources":["file:///Users/prabhjot/shared-counter-app/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport Counter from '@/components/Counter';\nimport CounterModal from '@/components/CounterModal';\nimport { useOffline } from '@/hooks/useOffline';\nimport { getOfflineCounters, saveOfflineCounters, clearPendingChanges, mergeServerData, syncPendingChangesToServer } from '@/lib/offlineStorage';\n\ninterface CounterData {\n  id: string;\n  name: string;\n  value: number;\n}\n\nexport default function Home() {\n  const [counters, setCounters] = useState<CounterData[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [isManageMode, setIsManageMode] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [modalMode, setModalMode] = useState<'edit' | 'add'>('add');\n  const [editingCounter, setEditingCounter] = useState<CounterData | null>(null);\n  const { isOnline, isOffline, pendingRequests, syncOfflineData } = useOffline();\n\n  const fetchCounters = async () => {\n    try {\n      const response = await fetch('/api/counters');\n      if (response.ok) {\n        const data = await response.json();\n        const serverCounters = data.counters;\n        const serverTimestamp = data.timestamp;\n        \n        // Merge server data with local changes\n        const mergedCounters = mergeServerData(serverCounters);\n        setCounters(mergedCounters);\n        \n        // Save the merged data with server timestamp\n        saveOfflineCounters(mergedCounters, serverTimestamp);\n        \n        // Clear pending changes that have been synced\n        clearPendingChanges();\n      } else {\n        throw new Error('Failed to fetch counters');\n      }\n    } catch (error) {\n      console.error('Network error, using offline data:', error);\n      // Use offline data if available\n      const offlineCounters = getOfflineCounters();\n      if (offlineCounters.length > 0) {\n        setCounters(offlineCounters);\n        setError('Using offline data - no internet connection');\n      } else {\n        setError('Failed to fetch counters and no offline data available');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchCounters();\n  }, []);\n\n  // Sync offline data when coming back online\n  useEffect(() => {\n    if (isOnline && pendingRequests > 0) {\n      // First sync pending changes to server\n      syncPendingChangesToServer().then((success) => {\n        if (success) {\n          // Then fetch fresh data from server\n          fetchCounters();\n        } else {\n          console.error('Failed to sync pending changes');\n        }\n      });\n    }\n  }, [isOnline, pendingRequests]);\n\n  const handleCounterUpdate = (id: string, newValue: number) => {\n    setCounters(prev => \n      prev.map(counter => \n        counter.id === id ? { ...counter, value: newValue } : counter\n      )\n    );\n  };\n\n  const handleEditCounter = (counter: CounterData) => {\n    setEditingCounter(counter);\n    setModalMode('edit');\n    setModalOpen(true);\n  };\n\n  const handleAddCounter = () => {\n    setEditingCounter(null);\n    setModalMode('add');\n    setModalOpen(true);\n  };\n\n  const handleSaveCounter = async (counterData: { id?: string; name: string; value: number }) => {\n    try {\n      if (modalMode === 'add') {\n        // Create new counter\n        const response = await fetch('/api/counters', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(counterData)\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          setCounters(prev => [...prev, data.counter]);\n          saveOfflineCounters([...counters, data.counter]);\n        }\n      } else {\n        // Update existing counter\n        const response = await fetch(`/api/counters/${counterData.id}`, {\n          method: 'PUT',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(counterData)\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          setCounters(prev => \n            prev.map(counter => \n              counter.id === counterData.id ? data.counter : counter\n            )\n          );\n          saveOfflineCounters(counters.map(counter => \n            counter.id === counterData.id ? data.counter : counter\n          ));\n        }\n      }\n    } catch (error) {\n      console.error('Failed to save counter:', error);\n    }\n  };\n\n  const handleDeleteCounter = async (id: string) => {\n    try {\n      const response = await fetch(`/api/counters/${id}`, {\n        method: 'DELETE'\n      });\n\n      if (response.ok) {\n        setCounters(prev => prev.filter(counter => counter.id !== id));\n        saveOfflineCounters(counters.filter(counter => counter.id !== id));\n      }\n    } catch (error) {\n      console.error('Failed to delete counter:', error);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-black flex items-center justify-center\">\n        <div className=\"text-white text-xl\">Loading counters...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-black flex items-center justify-center\">\n        <div className=\"text-red-400 text-xl\">{error}</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-black text-white\">\n      <div className=\"container mx-auto px-4 py-12\">\n        <header className=\"text-center mb-12\">\n          <h1 className=\"text-4xl font-bold mb-4\">Shared Counters</h1>\n          <p className=\"text-gray-400 text-lg\">\n            Real-time counters shared across all users\n          </p>\n          \n          {/* Connection Status */}\n          <div className=\"mt-4 flex items-center justify-center gap-4\">\n            <div className={`flex items-center gap-2 px-3 py-1 rounded-full text-sm ${\n              isOnline \n                ? 'bg-green-900 text-green-300' \n                : 'bg-yellow-900 text-yellow-300'\n            }`}>\n              <div className={`w-2 h-2 rounded-full ${\n                isOnline ? 'bg-green-400' : 'bg-yellow-400'\n              }`}></div>\n              {isOnline ? 'Online' : 'Offline'}\n            </div>\n            \n            {pendingRequests > 0 && (\n              <div className=\"flex items-center gap-2 px-3 py-1 rounded-full text-sm bg-blue-900 text-blue-300\">\n                <div className=\"w-2 h-2 bg-blue-400 rounded-full animate-pulse\"></div>\n                {pendingRequests} pending\n              </div>\n            )}\n          </div>\n        </header>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-6xl mx-auto\">\n          {counters.map((counter) => (\n            <Counter\n              key={counter.id}\n              id={counter.id}\n              name={counter.name}\n              value={counter.value}\n              onUpdate={handleCounterUpdate}\n              isOffline={isOffline}\n              allCounters={counters}\n              isManageMode={isManageMode}\n              onEdit={handleEditCounter}\n            />\n          ))}\n        </div>\n\n        <div className=\"text-center mt-12 space-y-4\">\n          <div className=\"flex gap-4 justify-center\">\n            <button\n              onClick={fetchCounters}\n              className=\"bg-gray-800 hover:bg-gray-700 text-white px-6 py-3 rounded-lg transition-colors duration-200\"\n            >\n              Refresh Counters\n            </button>\n            \n            {pendingRequests > 0 && isOnline && (\n              <button\n                onClick={() => syncPendingChangesToServer().then(() => fetchCounters())}\n                className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg transition-colors duration-200\"\n              >\n                Sync Offline Changes\n              </button>\n            )}\n          </div>\n          \n          {isOffline && (\n            <div className=\"text-yellow-400 text-sm\">\n              You're offline. Changes will be synced when you're back online.\n            </div>\n          )}\n          \n          {pendingRequests > 0 && isOnline && (\n            <div className=\"text-blue-400 text-sm\">\n              Syncing {pendingRequests} offline changes...\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 926, "column": 0}, "map": {"version":3,"sources":["file:///Users/prabhjot/shared-counter-app/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}}]
}